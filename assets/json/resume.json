{
  "basics": {
    "name": "김민지 Minji Kim",
    "label": "Backend Developer / Data Engineer",
    "image": "https://github.com/minngki/minngki.github.io/blob/main/assets/img/prof-minji.jpg",
    "email": "minngkii@gmail.com",
    "phone": "010-8863-6370",
    "url": "https://github.com/minngki",
    "introduce": "장애 대응부터 성능 개선, 자동화까지 기술적 지속 가능성과 운영 안정성을 고민하며 시스템을 고도화해온 백엔드 개발자입니다.<br><br>Airflow, GCS, RDBMS 등을 활용하여 대규모 데이터를 안정적으로 처리하고 전송하는 시스템을 구축하고 운영해왔으며, 주기적 스케줄링과 장애 복구를 포함한 데이터 흐름 전반을 책임졌습니다. 특히, 보험 마이데이터 기반 진단·추천 엔진을 개발하여 Bodoc 앱(B2C)과 보험사 대상 B2B 서비스를 제공한 경험이 있습니다. Java와 TypeScript 기반의 다양한 API 서버를 운영 환경에 맞게 유연하게 적용하며, 실용적인 문제 해결 역량을 쌓아왔습니다. 또한, 보험 약관 자동 수집 시스템을 직접 구현하며, 확장성과 유지보수성을 고려한 아키텍처 설계와 리팩토링을 주도해왔습니다.<br><br>분산 처리와 장애 감지, 예외 상황에서도 견고하게 동작하는 자동화 구조 설계에 관심이 많으며, 신뢰성 있는 데이터를 안정적으로 전달하는 것에 높은 책임감을 가지고 일합니다. 기술과 서비스에 대한 깊은 이해를 바탕으로, 앞으로도 더 나은 시스템을 설계하고 구현하며, 데이터 흐름을 책임지는 개발자로 성장하고자 합니다.",

    "location": {
      "address": "",
      "postalCode": "",
      "city": "Songpa-gu",
      "countryCode": "South Korea",
      "region": "Seoul"
    },
    "profiles": [
      {
        "network": "Linkedin",
        "username": "Minji Kim",
        "url": "https://twitter.com/AlbertEinstein"
      }
    ]
  },
  "work": [
    {
      "name": "Aijinet",
      "position": "R&D Center Backend Chapter / Backend Developer",
      "location": "Seoul, South Korea",
      "url": "http://www.aijinet.com/theme/aijinet/company/company.php",
      "startDate": "2022-02",
      "highlights": [
        "Airflow 및 GCP 기반의 병렬 처리·스케줄링 시스템 설계 및 운영 자동화",
        "보험 약관·보험료 등 정형·비정형 데이터를 대상으로 한 ETL 파이프라인 재구축 및 운영",
        "Bodoc 앱 보험 진단·추천 기능을 위한 엔진 로직 설계 및 Express.js(TS) 기반 API 서버 개발",
        "PostgreSQL, Nest.js 기반 SaaS 아키텍처 도입 및 대용량 보험료 데이터 처리 개발",
        "Spring Boot 기반의 Bodoc 어드민 페이지 및 보험사 대상 B2B API 개발 및 운영 고도화"
      ]
    },
    {
      "name": "Aijinet",
      "position": "DataLabs / Data Researcher",
      "location": "Seoul, South Korea",
      "url": "http://www.aijinet.com/theme/aijinet/company/company.php",
      "startDate": "2021-08",
      "endDate": "2022-01",
      "highlights": [
        "KOICD 질병코드 간 연관성 분석 및 매핑을 통한 약관 데이터와 보상 내용 정제 작업",
        "보험 공시 데이터를 기반으로 한 고객 보유 상품의 가성비 분석 로직 기획 및 엔진 개발 지원",
        "보험료 및 공시실 데이터 수집을 통한 엔진 메타데이터 구성 및 Pandas 기반 가공"
      ]
    }
  ],
  "projects": [
    {
      "name": "B2B SaaS 보장분석 서비스 개발",
      "summary": "RabbitMQ 기반 메시지 처리 및 보장 리포트 템플릿 자동화",
      "highlights": [
        "요구사항 기반 DLQ 를 포함한 메시지 큐 서버 구성 및 장애 대응 구조 설계",
        "Spring Boot 기반 Producer/Consumer API 개발 및 큐 상태 실시간 모니터링 처리",
        "Thymeleaf 템플릿 엔진 기반 보장 분석 리포트 HTML 바인딩 및 정적 페이지 생성",
        "정적 HTML 페이지 생성 후 S3 업로드 자동화"
      ],
      "startDate": "2025-07-01",
      "skillKeywords": [
        "Java",
        "Spring Boot",
        "RabbitMQ",
        "Thymeleaf",
        "S3"
      ]
    },
    {
      "name": "B2B 통계 메타데이터 자동화 시스템 구축",
      "summary": "Airflow 기반 최대 1,900만 건 보험업권 마이데이터 중심의 통계치 추출 자동화",
      "highlights": [
        "보험 데이터 처리를 위해 벡터화 연산 기반 Pandas 최적화 적용하여 처리 속도 개선",
        "Pandera 기반 스키마 검증 로직을 도입하여 데이터 유입 시 타입 안정성과 유효성 보장",
        "고객사 분기별 통계 리포트 추출 작업을 자동화하여 수작업 제거 및 운영 안정성 확보"
      ],
      "startDate": "2025-06-01",
      "skillKeywords": [
        "Python",
        "Pandas",
        "Pandera",
        "Airflow",
        "GCS",
        "Amplitude API",
        "Slack API"
      ]
    },
    {
      "name": "Amplitude 사용자 정보 일괄 처리 시스템 개발",
      "summary": "Airflow 기반 병렬 처리 ETL 파이프라인 설계 및 GCS 연동 구조 개발",
      "highlights": [
        "expand 기반 병렬 처리 시스템 신규 구축 및 최적화로 6만 건 데이터 처리 시간 84% 개선",
        "Task와 GCS 간 매핑 구조를 설계하여 에러 발생 시 추적 가능성 향상 및 운영 효율 증대",
        "Pydantic 기반 입력 데이터 검증 로직을 통해 타입 안정성과 유효성 보장",
        "Amplitude API 호출 시 Exponential Backoff 재시도 로직 적용으로 안정성 확보"
      ],
      "startDate": "2025-06-01",
      "skillKeywords": [
        "Python",
        "Pydantic",
        "Airflow",
        "GCS",
        "Amplitude API",
        "Slack API"
      ]
    },
    {
      "name": "전사 KPI 대시보드 데이터 적재 자동화",
      "summary": "전사 KPI 시각화를 위한 일별 누적 데이터 ETL 파이프라인 설계 및 자동화",
      "highlights": [
        "Airflow 기반 DAG 설계 및 MySQL·Google Sheet API 연동을 통한 데이터 적재 자동화",
        "Google Calendar API 연동하여 공휴일 여부 판단",
        "Task branch를 통해 DAG 실행 흐름을 제어로 리소스 사용 최적화",
        "통합 트랜잭션 처리 방식 도입으로 데이터 적재의 일관성과 안정성 확보",
        "MSSQL과 연동된 Looker Studio 대시보드에 데이터 노출 및 시각화 환경 구성"
      ],
      "startDate": "2025-05-01",
      "skillKeywords": [
        "Python",
        "Airflow",
        "MSSQL",
        "MySQL",
        "Google Calendar API",
        "Google Sheet API",
        "Slack API"
      ]
    },
    {
      "name": "보험료 기반 추천 데이터 자동화 시스템 구축",
      "summary": "보험료 기반 추천 점수 생성을 위한 대용량 데이터 ETL 자동화를 Airflow 기반으로 구축",
      "highlights": [
        "Airflow 도입 및 GCS 연동을 포함한 ETL 파이프라인 자동화 DAG 설계",
        "약 150만 건의 API 요청을 비동기 처리로 구현, 5분 이내 처리 완료하여 생산성 향상",
        "내부 엔진 빌드 시 최신 메타데이터 자동 참조 구조로 배포 효율 및 데이터 신뢰도 강화",
        "Slack API 연동을 통한 실시간 모니터링 체계 구축으로 운영 안정성 확보"
      ],
      "startDate": "2025-03-01",
      "endDate": "2025-04-01",
      "skillKeywords": [
        "Python",
        "Airflow",
        "GCS",
        "PostgreSQL",
        "Slack API"
      ]
    },
    {
      "name": "Bodoc 어드민 페이지 보안 강화 시스템 개발",
      "summary": "금융감독원 보안 가이드 대응을 위한 인증 및 계정 보안 고도화",
      "highlights": [
        "Spring Security 기반 마이페이지 API 설계 개발",
        "비밀번호 인증 및 변경 로직 구현으로 보안 정책 구현",
        "JUnit 기반 단위 테스트 커버리지 96% 달성 및 API 명세 자동화(Redoc 기반) 적용"
      ],
      "startDate": "2025-02-01",
      "skillKeywords": [
        "Java",
        "Spring Boot",
        "Spring Security",
        "JUnit",
        "MySQL"
      ]
    },
    {
      "name": "통계 데이터 생성을 위한 배치 시스템 구축",
      "summary": "MySQL Event Scheduler 기반 통계 데이터 자동 추출 및 최신화 체계 구축",
      "highlights": [
        "통계 처리 전용 스키마 설계 및 일괄 처리(Batch) 자동화 구조 구현",
        "기존 운영 스키마 분석을 바탕으로 인덱스 재설계 및 최적화 적용",
        "인덱스 적용을 통해 통계 데이터 추출 속도 약 90% 개선",
        "기존 수동 통계 작업을 주 단위 자동화하여 데이터 최신성 및 운영 효율성 향상"
      ],
      "startDate": "2025-01-01",
      "endDate": "2025-02-01",
      "skillKeywords": [
        "MySQL",
        "Event Scheduler"
      ]
    },
    {
      "name": "보험 약관 크롤링 시스템 재구축",
      "summary": "반복적인 수동 크롤링·API 요청 기반 수집 작업 자동화 및 데이터 파이프라인 재구축",
      "highlights": [
        "전체 ETL 파이프라인 재설계 및 오류 복구 가능한 구조 구현",
        "HTML 파싱 및 API 응답 기반 이중 데이터 수집 방식 적용으로 크롤링 범용성 향상",
        "월간 오류 발생률 142건에서 15건으로 89% 감소",
        "Exponential backoff 기반 요청 재시도 체계 강화로 운영 안정성 확보",
        "전체 처리 기간 7일에서 3일로 단축하여 수집 주기 개선",
        "분기 단위의 약관 업데이트를 주 단위로 Cron 스케줄링하여 운영 효율성을 91% 향상"
      ],
      "startDate": "2024-04-01",
      "endDate": "2024-12-01",
      "skillKeywords": [
        "Python",
        "GCS",
        "PostgreSQL",
        "Django ORM (transaction.atomic, bulk insert)",
        "Slack API"
      ]
    },
    {
      "name": "앱 백엔드 서버 마이그레이션 지원",
      "summary": "유지보수성과 구조적 일관성을 위한 백엔드 API 마이그레이션 수행",
      "highlights": [
        "Laravel → Spring Boot 기반 특정 백엔드 API를 마이그레이션하여 시스템 일관성 기여",
        "중복 로직 제거 및 JPA Repository 기반 쿼리 구조 개선을 통해 공통 모듈화 진행",
        "모듈 및 쿼리 재사용을 통해 유사 API 개발 소요 시간 5일 → 3일로 단축 (약 40% 감소)"
      ],
      "startDate": "2024-08-01",
      "endDate": "2024-09-01",
      "skillKeywords": [
        "Java",
        "Spring Boot",
        "MySQL",
        "PHP"
      ]
    },
    {
      "name": "간편보험료 기반 보험 상품 비교 시스템 개발",
      "summary": "보험설계사들의 수기 설계안 작성을 자동화하는 보험 비교 엔진 구축",
      "highlights": [
        "Next.js 기반 보험료 계산 및 데이터 제어 API 설계 및 성능 최적화",
        "보험설계사의 상품 비교 소요 시간 80% 단축, 계약 전환율 4%p 향상",
        "TypeORM 도입 및 쿼리 최적화를 통해 응답 속도 90% 개선",
        "데이터 검증용 API 추가 개발로 정합성 및 서비스 신뢰도 확보"
      ],
      "startDate": "2024-01-01",
      "endDate": "2024-03-01",
      "skillKeywords": [
        "TypeScript",
        "Node.js",
        "Express.js",
        "MongoDB",
        "GCP Cloud Run",
        "Redoc",
        "Memcached",
        "Python"
      ]
    },
    {
      "name": "SaaS 보험 엔진 고도화 및 개발",
      "summary": "TypeScript 기반 보험 진단·추천 엔진 고도화 및 개발",
      "highlights": [
        "Bodoc 앱 진단·추천 탭의 비즈니스 요구사항 반영 및 안정적 유지보수 수행",
        "건강 연동 여부에 따라 엔진 엔드포인트 분기 처리하여 건강 맞춤형 보험 결과 제공 로직 구현",
        "Cloud Run 환경에서 B2C/B2B 서버 분리 및 Github branch 체계 구축",
        "환경별 배포 파라미터를 반영한 Cloud Run 배포 명령어를 스크립트화하여 배포 절차 자동화",
        "자동화 문서화 도구 Redoc 도입으로 API 문서 관리 생산성 향상",
        "메타데이터 캐싱을 위한 Memcached 적용으로 초기 로딩 성능 30% 개선",
        "유사도 기반 스크립트 도입하여 메타데이터 갱신 업무 시간 70% 단축, 성공률 4%p 개선",
        "비개발 부서 대상 엔진 시뮬레이션 API 설계로 정책 변경 테스트 환경 제공",
        "증권사 마이데이터 기반 보장 분석 기능에 TypeGuard 및 암호화 토큰 기능 설계 참여",
        "마이데이터 및 신용정보원 보험 데이터 비교 분석하여 진단·추천 엔진 로직 기획 및 구현 참여"
      ],
      "startDate": "2022-05-01",
      "endDate": "2025-07-01",
      "skillKeywords": [
        "Node.js",
        "TypeScript",
        "Express.js",
        "GCP",
        "Cloud Run",
        "MongoDB",
        "Redoc"
      ]
    }
  ],
  "skills": [
    {
      "name": "Languages & Runtimes",
      "level": "Master",
      "icon": "fa-solid fa-code",
      "keywords": [
        "Python",
        "Java",
        "TypeScript",
        "JavaScript",
        "Node.js"
      ]
    },
    {
      "name": "Frameworks & Libraries",
      "icon": "fa-solid fa-puzzle-piece",
      "keywords": [
        "Spring Boot",
        "Nest.js",
        "Express.js",
        "Django"
      ]
    },
    {
      "name": "Infrastructure & Databases",
      "icon": "fa-solid fa-cloud",
      "keywords": [
        "GCP",
        "Airflow",
        "MySQL",
        "PostgreSQL",
        "MSSQL",
        "MongoDB",
        "Docker"
      ]
    },
    {
      "name": "Tools & IDEs",
      "icon": "fa-solid fa-screwdriver-wrench",
      "keywords": [
        "Bash, Zsh",
        "Git",
        "Gitlab",
        "Github",
        "IDEA / PyCharm / DataSpell / Datagrip / Webstorm",
        "Jira",
        "Confluence",
        "Notion"
      ]
    }
  ],
  "education": [
    {
      "institution": "세종대학교",
      "location": "Seoul, South Korea",
      "url": "https://en.sejong.ac.kr/eng/index.do",
      "area": "경영학과 | Business Analytics 융합연계전공",
      "studyType": "bachelor",
      "startDate": "2017-02-20",
      "endDate": "2022-02-20",
      "score": "<br>",
      "courses": [
        "Total GPA of 3.84 / 4.5",
        "Major GPA of 3.94 / 4.5"
      ]
    }
  ],
  "awards": [
    {
      "title": "지역 데이터를 활용한 데이터 분석 및 시각화 “광진구 시장 활성화 프로젝트”",
      "date": "2021-12",
      "awarder": "세종대학교/서울특별시",
      "url": "https://drive.google.com/file/d/1ePgSdRrNP8nd-heTAzub0KQjIWC2m1E5/view?usp=drive_link",
      "summary": "대학총장상",
      "skillKeywords": ["Tableau","Python","Geopandas"],
      "subTitle": "Tableau Dashboard",
      "subUrl": "https://public.tableau.com/app/profile/iris.kim2553/vizzes"
    },
    {
      "title": "대학 팀프로젝트 경진대회, “삼성전자 주식 예측 보고서”",
      "date": "2020-02",
      "awarder": "세종대학교",
      "summary": "최우수상",
      "skillKeywords": ["Python", "scikit-learn"]
    },
    {
      "title": "대학생 영화 수요 예측 경진대회, \"개봉 전후 영화 흥행 예측 분석을 통한 의사결정\"",
      "date": "2020-01",
      "awarder": "소니전자",
      "url": "https://drive.google.com/file/d/1mVLBb2eWx6r0slbvuZ-ikAf8Ae9BgvZm/view?usp=drive_link",
      "summary": "장려상",
      "skillKeywords": ["Tableau","Python","scikit-learn"]
    },
    {
      "title": "전국 대학생∙일반인 고조선 독서논술대회",
      "date": "2019-10",
      "awarder": "겨레얼살리기국민운동본부",
      "summary": "2위 은상"
    },
    {
      "title": "교내 독서경시대회 \"사소한 것들\"",
      "date": "2018-10",
      "awarder": "세종대학교",
      "summary": "3위"
    },
    {
      "title": "전국 대학생∙일반인 고조선 독서논술대회",
      "date": "2018-10",
      "awarder": "겨레얼살리기국민운동본부",
      "summary": "장려상"
    },
    {
      "title": "신입생 입시 합격수기 공모전",
      "date": "2017-04",
      "awarder": "세종대학교",
      "url": "https://drive.google.com/file/d/1tdLUQZ6TRYJXERUoOyf5v7EMObKUVF34/view?usp=drive_link",
      "summary": "최우수상"
    }
  ],
  "certificates": [
    {
      "name": "정보처리기사",
      "date": "2024-06",
      "issuer": "한국산업인력공단",
      "icon": "fa-solid fa-clipboard-check"
    },
    {
      "name": "TEPS 358점",
      "date": "2024-09",
      "issuer": "서울대학교발전재단",
      "icon": "fa-solid fa-tag"
    }
  ],
  "languages": [],
  "interests": [
    {
      "name": "Sports",
      "icon": "fa-solid fa-tag",
      "keywords": [
        "Pilates",
        "Golf",
        "Weight Training",
        "Running"
      ]
    }
  ],
  "references": [],
  "volunteer": [],
  "meta": {},
  "publications": []
}
